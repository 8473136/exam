spring:
  # 数据源配置
  datasource:
    # 连接池类型
    type: com.alibaba.druid.pool.DruidDataSource
    # MYSQL 5 驱动：com.mysql.jdbc.Driver，MYSQL 6+ 驱动：com.mysql.cj.jdbc.Driver
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://115.159.38.225:3306/exam?autoReconnect=true&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=CONVERT_TO_NULL&useSSL=false&serverTimezone=GMT%2B8
    username: root
    password: abcd123456!@#
    # 连接池配置
    druid:
      # 初始化大小，最小，最大
      initial-size: 5
      min-idle: 5
      max-active: 20
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存时间
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 打开 PSCache，并且指定每个连接上 PSCache 的大小
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      # 配置监控统计拦截的 Filter，去掉后监控界面 SQL 无法统计，wall 用于防火墙
      filters: stat,wall,log4j
      # 通过 connection-properties 属性打开 mergeSql 功能；慢 SQL 记录
      connection-properties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000
      # 配置 DruidStatFilter
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: .js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*
      # 配置 DruidStatViewServlet
      stat-view-servlet:
        # 开启监控页面
        enabled: true
        # 页面地址
        url-pattern: /druid/*
        # IP 白名单，没有配置或者为空，则允许所有访问
        allow: 127.0.0.1
        # IP 黑名单，若白名单也存在，则优先使用
        deny: 192.168.31.253
        # 禁用 HTML 中 Reset All 按钮
        reset-enable: false
        # 登录用户名/密码
        # login-username: admin
        # login-password: 123456
  # redis配置
  redis:
    # redis地址
    host: 192.168.0.116
    # redis端口
    port: 6379
    # redis库
    database: 1
    jedis:
      pool:
        # 连接池最大连接数（使用负值表示没有限制，对应maxTotal）
        max-active: 50
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: 3000
        # 连接池中的最大空闲连接
        max-idle: 20
        # 连接池中的最小空闲连接
        min-idle: 2
    # 密码
    password: 123456
    # 连接超时时间（毫秒）
    timeout: 30000
  servlet:
    multipart:
      # 单个文件大小
      max-file-size: 100MB
      # 设置总上传的数据大小
      max-request-size: 100MB
      # 开启
      enabled: true
  # rabbitMq配置
  rabbitmq:
    host: 192.168.0.116
    port: 5672
    username: admin
    password: admin
    listener:
      simple:
        acknowledge-mode: manual
        default-requeue-rejected: true #意思是，消息被拒后（即未消费），重新（true）放入队列
        retry:
          enabled: true # 是否开启消费者重试（为false时关闭消费者重试，这时消费端代码异常会一直重复收到消息）
          max-attempts: 5 # 重试次数
          initial-interval: 5000
    # 改卷交换机
    correctPaper:
      queue: correctPaperQueue
      exchange: correctPaperExchange
      routingKey: currect
server:
  port: 9091
mybatis:
  #注册Mapper.xml配置文件
  mapper-locations: classpath:mapper/*.xml
  configuration:
    #配置下划线转驼峰
    map-underscore-to-camel-case: true
#分页配置
pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql
auth:
  Login:
    #不拦截的请求 逗号隔开
    NotInterception: "/pc/**,/images/**,/lib/**,/*.html,/css/**,/js/**,/page/**,/api/**,/ExamNow/**,/management/**/*.html,/management/**/*.css,/management/**/*.js,/management/lib/**,/management/images/**,/management/auth/login,/management/auth/refreshToken,/**/*.ico,/error,/template/**,/webjars/**,/service-worker.js,/swagger-resources/**,/precache-manifest.eea302037a9c2783bdf341d6c2dd2ca2.js,/manifest.json,/robots.txt"
